mode: production

application:
  apiVersion: "v1"
  bearer: "Bearer"
  bearerHeader: "authorization"
  apiKeyHeader: "api-key"
  port: 3000
  information: false
  request:
    allowMethods: ["POST"]
    ignoreCheckMethods: ["swagger", "user/shake-hand"]
    ignoreApiKey: ["swagger"]
    ignoreToken: ["login", "logout", "shake-hand", "swagger"]

job:
  activeCronJobs: ["sampleJob"]
  activeConsumers: ["sample-consumer"]

logger:
  logOnConsole: false
  logOnFile: false
  logOnDatabase: true
  winston:
    dirname: "logs"
    datePattern: "YYYY-MM-DD"
    extension: ".log"
    zippedArchive: true
    maxSize: "20m"
    maxFiles: "14d"

database:
  mongodb:
    name: "node_starter"
    default_collection: "default"
    uri: "mongodb://0.0.0.0:27017/node_starter"
  postgres:
    user: "postgres"
    host: "0.0.0.0"
    database: "node_starter"
    password: "postgres"
    port: 5432
    idleTimeoutMillis: 10000
    connectionTimeoutMillis: 10000
    ssl:
      rejectUnauthorized: false
  redis:
    uri: "redis://localhost:6379"
  ioRedis:
    host: "localhost"
    port: 6379
    showFriendlyErrorStack: true
    enableReadyCheck: true
    maxRetriesPerRequest: null

cors:
  allow_origin: "*"
  allow_method: ["POST"]

rate_limiter:
  windowMs: 60_000
  max: 100
  standardHeaders: true
  legacyHeaders: false

upload:
  # the directory for placing file uploads in. You can move them later by using fs.rename()
  uploadDir: "/var/assets"
  validUploadFolders: ["upload"]
  responsePath: "https://assets-dev.embargoapp.com"
  # to include the extensions of the original files or not
  keepExtensions: true
  # when you call the .parse method, the files argument (of the callback) will contain arrays of files for inputs which submit multiple files using the HTML5 multiple attribute. Also, the fields argument will contain arrays of values for fields that have names ending with '[]'
  multiples: true
  # the minium size of uploaded file
  minFileSize: 1
  # limit the amount of uploaded files, set Infinity for unlimited
  maxFiles: Infinity
  # limit the size of uploaded file - 2 * 1024 * 1024
  maxFileSize: 2097152
  # limit the size of the batch of uploaded files - 3 * 2 * 1024 * 1024
  maxTotalFileSize: 6291456
  # limit the number of fields, set 0 for unlimited
  maxFields: 100
  # limit the amount of memory all fields together (except files) can allocate in bytes - 20 * 1024 * 1024
  maxFieldsSize: 20971520
